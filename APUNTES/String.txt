at() --> Devuelve el carácter en una posición (índice) específica.
    Ejm: 
        texto = Hola Mundo
        texto.at(0) = H 

concat() --> Une dos o más cadenas y devuelve una nueva.
    Ejm:
        texto1 = Miguel
        texto2 = Pulido
        texto1.concat(" ", texto2) = Miguel Pulido

includes() --> Devuelve true si la cadena contiene el valor especificado.
    Ejm:
        texto = Hola Mundo este es mi primer programa
        texto.includes(primer) = true

length --> Devuelve la longitud (número de caracteres) de la cadena.
    Ejm:
        texto = Hola Mundo
        texto.length = 10

replace() / replaceAll() --> Sustituye la primera coincidencia de un patrón por otro valor.
    Ejm:
        texto = Hola Mundo, soy Miguel
        texto.replace("Miguel", "Pepe") = Hola Mundo, soy Pepe
    Ejm:
        texto = MiguelPulido
        texto.replace(/([a-z])([A-Z])/g, "$1 $2")   = Miguel Pulido

slice() --> Extrae una parte de la cadena y devuelve una nueva.
    Ejm: 
        texto = Hola Mundo
        texto.slice(0,4) = Hola

toLowerCase() / toUpperCase() --> Convierte la cadena a minúsculas / mayúsculas.
    Ejm:
        texto = Hola Mundo
        texto.toLowerCase() = hola mundo
        texto.toUpperCase() = HOLA MUNDO

trim() / trimStart() / trimEnd() --> Elimina los espacios en blanco al principio y al final de la cadena.
    Ejm:
        texto =     Hola Mundo      ;
        texto.trim() = Hola Mundo;
        texto.trimEnd() =      Hola Mundo;
        texto.trimStart() = Hola Mundo

test() --> Comprueba si una cadena (string) cumple con una expresión regular. 
    Ejm: 
        texto = Hola
        test = /[A-Z]/.test(texto)  = H

split() --> Divide la cadena en un array de subcadenas.
    Ejm: 
        texto = Hola Mundo soy Miguel
        texto.split(" ") = Hola,Mundo,soy,Miguel --> 4 subcadenas

